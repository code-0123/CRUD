package com.mvc.commons.aop;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.annotation.Aspect;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Component;import java.util.Arrays;@Component@Aspectpublic class LogAdvice {    private static final Logger logger = LoggerFactory.getLogger(LogAdvice.class);    @Around("execution(com.mvc.controller.*Controller...*(..))"            + " || execution(com.mvc.service.*Impl...*(..))"            + " || execution(com.mvc.dao.*Impl...*(..))")    public Object logPrint(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {        System.out.println("로그나와라!");        long start = System.currentTimeMillis();        Object result = proceedingJoinPoint.proceed();        String type = proceedingJoinPoint.getSignature().getDeclaringTypeName();        String name = "";        if (type.contains("Controller")) {            name = "Controller : ";        } else if (type.contains("Service")) {            name = "Service : ";        } else if (type.contains("DAO")) {            name = "DAO : ";        }        long end = System.currentTimeMillis();        logger.info(name + type + "."+proceedingJoinPoint.getSignature().getName() + "()");        logger.info("Argument/Parameter : " + Arrays.toString(proceedingJoinPoint.getArgs()));        logger.info("Running Time : " + (end-start));        logger.info("----------------------------------------------------------------");        System.out.println("왜 안나와?");        return result;    }}